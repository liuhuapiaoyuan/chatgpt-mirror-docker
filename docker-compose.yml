version: '3.8'
services:
  mysql:
    image: mysql:8
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    volumes:
      - ./data/mysql/:/var/lib/mysql/
      - ./docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
    environment:
      TZ: Asia/Shanghai # 指定时区
      MYSQL_ROOT_PASSWORD: "123456" # 配置root用户密码
      MYSQL_DATABASE: "cool" # 业务库名
      MYSQL_USER: "cool" # 业务库用户名
      MYSQL_PASSWORD: "123123" # 业务库密码
  redis:
    image: redis
    # command: --requirepass "12345678" # redis库密码,不需要密码注释本行
    restart: always
    environment:
      TZ: Asia/Shanghai # 指定时区
    volumes:
      - ./data/redis/:/data/
  chatgpt-mirror-server:
    image: liuhuapiaoyuan/chatgpt-mirror-server:latest
    restart: always
    ports:
      - 8200:8001
    environment:
      TZ: Asia/Shanghai # 指定时区
      # 接入网关地址 可以用cloudflare/clash之类的代理
      CHATPROXY: ""
      # 接入网关的授权码
      AUTHKEY: ""
      # 因为官方的CDN可能被墙了，你可以自己用cloudflare做一个代理
      CDNHOST: "https://files.oaiusercontent.com"
      # 是否只使用token验证
      ONLYTOKEN: "false" 
    volumes:
      - ./data/chatgpt-mirror-server/:/app/data/
    labels:
      - "com.centurylinklabs.watchtower.scope=liuhuapiaoyuan-chatgpt-mirror-server"
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --scope liuhuapiaoyuan-chatgpt-mirror-server --cleanup
    restart: always
    environment:
      - TZ=Asia/Shanghai
    labels:
      - "com.centurylinklabs.watchtower.scope=liuhuapiaoyuan-chatgpt-mirror-server"